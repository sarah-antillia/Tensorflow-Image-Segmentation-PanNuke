; train_eval_infer.config
; 2024/04/27 (C) antillia.com
; 
; PanNuke num_classes is 5 
;  0: Neoplastic cells, 
;  1: Inflammatory, 
;  2: Connective/Soft tissue cells, 
;  3: Dead Cells, 
;  4: Epithelial,

; However, we use RGB2GrayscaleMask Dataset, which means a single class segmentation
;  

[model]
model          = "TensorflowUNet"

generator      = False
image_width    = 512
image_height   = 512
image_channels = 3

input_normalization = False

; If mask were RGB2Grayscaled, num_classes should be 1 
num_classes    = 1

;In multi classes case, num_classes should include both background category and segmentation categories. 
;num_classes    = 6

activation     = "mish"
optimizer      = "Adam"
palettized     = True
base_filters   = 16
base_kernels   = (5,5)
num_layers     = 7
dropout_rate   = 0.08
learning_rate  = 0.0001
clipvalue      = 0.3
dilation       = (2,2)

;loss and metrics for a single class
loss           = "bce_dice_loss"
metrics        = ["binary_accuracy"]

;loss           = "tf.keras.losses.CategoricalCrossentropy('loss')"
;metrics        = ["tf.keras.metrics.CategoricalAccuracy(name='accuracy')"]

;loss           = "tf.keras.losses.SparseCategoricalCrossentropy('loss')"
;metrics        = ["tf.keras.metrics.SparseCategoricalAccuracy(name='accuracy')"]

;metrics        = ["tf.keras.metrics.Accuracy()"]

final_activation = "sigmoid"

show_summary   = False

[dataset]

; 2024/04/20 color_order of image and mask.
; If image were read through cv2.imread(image_file) without any option
; the color_order of image "bgr"
; , specify the following line to convert bgr -> rgb
; color_order = "rgb"

color_order     = "bgr"
debug           = False
rgb_mask        = True

mask_format     = "rgb"
image_normalize  = False

; Speicfy RGB2GrayscaleImageMaskDataset class to convert a rgb-mask to a grayscale-mask. 
datasetclass  = "RGB2GrayscaleImageMaskDataset"
resize_interpolation = "cv2.INTER_NEAREST"


[train]
save_model_file = ""

dataset_splitter = True
learning_rate_reducer = True
reducer_patience      = 4

epochs        = 100
batch_size    = 2
patience      = 10
;metrics       = ["accuracy", "val_accuracy"]
metrics       = ["binary_accuracy", "val_binary_accuracy"]

model_dir     = "./models"
eval_dir      = "./eval"

image_datapath = "../../../dataset/PanNuke/train/images/"
mask_datapath  = "../../../dataset/PanNuke/train/masks/"
create_backup  = False

[eval]
image_datapath = "../../../dataset/PanNuke/valid/images/"
mask_datapath  = "../../../dataset/PanNuke/valid/masks/"

[test]
image_datapath = "../../../dataset/PanNuke/test/images/"
mask_datapath  = "../../../dataset/PanNuke/test/masks/"

[infer] 
; directory including test images
images_dir     = "./mini_test/images/"

; directory to save a inferred image(mask)
output_dir     = "./test_output"

mask_colorize  = True
; directory to save an inferred colorized image(mask).
colorized_dir = "./test_output_colorized"
merged_dir    = "./test_output_merged"

[mask]
blur      = True
binarize  = False
; color_order = bgr 
; if mask_colors =[(b, g, r),...]
color_order = "bgr"
; else mask_colors =[(r, g, b),...]
;color_order = "rgb"

; Convert rgb mask to grayscale mask
; R, G, B intensity for converting rgb to grayscale: CCIR 601
; 
grayscaling  = (0.299, 0.587, 0.114)

; BT. 709
;grayscaling  = (0.2126, 0.7152, 0.0722)

; The following is OpenCV BGR color-order
;               black      green        blue                 red     b    g =            b    r 
mask_colors = [(0, 0, 0), ( 0, 255, 0), (255, 0, 0), ( 0,  0, 255), (255, 255, 0), ( 0, 255, 255),]
;mask_colors = [(0, 0, 0), ( 0, 255, 0), (255, 0, 0), ( 0,  0, 255), ( 0, 255, 255), (255, 255, 0), ]

classes     = ["Background", "Neoplastic cells", "Inflammatory", "Connective/Soft tissue cells","Dead Cells", "Epithelial"]   
